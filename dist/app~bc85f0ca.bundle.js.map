{"version":3,"file":"app~bc85f0ca.bundle.js","mappings":";oZACA,4gGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qiBAkCA,QA/BMC,WACF,cAAyC,IAA3BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,qGAAW,SACrCC,KAAKC,QAAUJ,EACfG,KAAKE,QAAUJ,EACfE,KAAKG,SAAWJ,EAEhBC,KAAKI,kBACR,2DAED,WACIC,EAAAA,EAAAA,KAAqB,CACjBR,OAAQG,KAAKC,QACbH,OAAQE,KAAKE,QACbH,QAASC,KAAKG,UAErB,wCAED,6FACUG,EAAMC,EAAAA,EAAAA,0BACNC,EAAOC,EAAAA,EAAOH,GAFxB,SAGoCE,EAAKE,SAHzC,cAGIV,KAAKG,SAASQ,UAHlB,gBAIUH,EAAKI,cAJf,OAMyBC,SAASC,cAAc,SAC/BC,iBAAiB,SAAS,SAACC,GACpCA,EAAMC,iBACNJ,SAASC,cAAc,gBAAgBI,OAC1C,IAVL,gWAjBEtB,iUCHN,0vNAsGA,QA/FMuB,sMACF,4jBAYA,wGACUb,EAAMC,EAAAA,EAAAA,gCADhB,SAEmCa,EAAAA,EAAAA,iBAAkCd,EAAIe,IAFzE,cAEUC,EAFV,gBAKcA,EALd,gBAIQC,EAJR,EAIQA,WAMJV,SAASC,cAAc,qBAAqBU,qBAAuBD,EAEnEV,SAASC,cAAc,oBAAoBW,iBAAmB,CAC1DC,MAAOH,EAAWI,YAClBC,IAAKL,EAAWM,WAGpBhB,SAASC,cAAc,kBAAkBgB,UAAYP,EAAWQ,MAEhElB,SAASC,cAAc,cAAckB,0BAA4BT,EAEjEV,SAASC,cAAc,eAAemB,mBAAqBV,EAAWW,gBAEtEC,EAAAA,EAAAA,KAAmB,CACfC,oBAAqBvB,SAASC,cAAc,aAC5CuB,mBAAoBC,EAAAA,EACpBf,WAAAA,IAGiBV,SAASC,cAAc,iBAC/BC,iBAAiB,SAAS,SAACwB,GACpCA,EAAEC,OAAOC,UAAUC,OAAO,UAC1B7B,SAASC,cAAc,eAAemB,mBAAqBV,EAAWW,eACzE,IAEDrB,SAASC,cAAc,eAAe6B,cAAtC,6BAAsD,WAAO3B,GAAP,8EAClDA,EAAMC,iBAD4C,SAE7B,EAAK2B,WAAWrB,GAFa,QAE5CsB,EAF4C,UAI9ChC,SAASC,cAAc,eAAemB,mBAAqBY,EAAOX,iBAJpB,2CAAtD,sDAnCJ,gIA2DA,kGAA0Bb,EAA1B,EAA0BA,GAChByB,EAAOjC,SAASC,cAAc,SAC9BiC,EAASlC,SAASC,cAAc,WAF1C,kBAI6BM,EAAAA,EAAAA,eAAgC,CACjDC,GAAAA,EACAyB,KAAMA,EAAKE,MACXD,OAAQA,EAAOC,QAP3B,cAIcH,EAJd,OAWQC,EAAKE,MAAQ,GACbD,EAAOC,MAAQ,GAZvB,kBAceH,GAdf,yCAiBQI,QAAQC,MAAR,MAjBR,mBAkBe,GAlBf,4LAxEE/B","sources":["webpack://restaurant-apps/./src/scripts/views/App.js","webpack://restaurant-apps/./src/scripts/views/components/detail/Detail.js"],"sourcesContent":["import DrawerInitiator from '../utils/DrawerInitiator';\r\nimport UrlParser from '../routes/url-parser';\r\nimport Routes from '../routes/routes';\r\n\r\nclass App {\r\n    constructor({ button, drawer, content }) {\r\n        this._button = button;\r\n        this._drawer = drawer;\r\n        this._content = content;\r\n\r\n        this._initialAppShell();\r\n    }\r\n\r\n    _initialAppShell() {\r\n        DrawerInitiator.init({\r\n            button: this._button,\r\n            drawer: this._drawer,\r\n            content: this._content,\r\n         });\r\n    }\r\n\r\n    async renderPage() {\r\n        const url = UrlParser.parseActiveWithCombiner();\r\n        const page = Routes[url];\r\n        this._content.innerHTML = await page.render();\r\n        await page.afterRender();\r\n\r\n        const skipLinkElem = document.querySelector('.skip');\r\n        skipLinkElem.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            document.querySelector('#mainContent').focus();\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n// export default main;\r\n","/* eslint-disable new-cap */\r\n// import Swal from 'sweetalert2';\r\nimport FavoriteRestaurantIdb from '../../../data/favorite-idb';\r\nimport RestaurantSource from '../../../data/RestourantSource';\r\nimport UrlParser from '../../../routes/url-parser';\r\nimport LikeInitiator from '../../../utils/LikeInitiator';\r\n\r\n/* eslint-disable class-methods-use-this */\r\nclass Detail {\r\n    static async render() {\r\n        return `\r\n            <jumbotron-wrapper> </jumbotron-wrapper>\r\n            <about-restaurant id=\"mainContent\" tabindex=\"0\"> </about-restaurant>\r\n            <container-list></container-list>\r\n            <div class=\"review\">\r\n                <review-list></review-list>\r\n                <review-form></review-form>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    static async afterRender() {\r\n        const url = UrlParser.parseActiveUrlWithoutCombiner();\r\n        const restaurantDetail = await RestaurantSource.detailRestaurant(url.id);\r\n        const {\r\n            restaurant,\r\n        } = await restaurantDetail;\r\n\r\n        // if (!restaurant) this.showAlert('Restaurant Detail gagal ditampilkan', 'error');\r\n        // Swal.close();\r\n\r\n        document.querySelector('jumbotron-wrapper')._dataNameRestauarant = restaurant;\r\n\r\n        document.querySelector('about-restaurant')._aboutRestaurant = {\r\n            about: restaurant.description,\r\n            img: restaurant.pictureId,\r\n        };\r\n\r\n        document.querySelector('container-list')._menuList = restaurant.menus;\r\n\r\n        document.querySelector('aside-info')._setInformationRestaurant = restaurant;\r\n\r\n        document.querySelector('review-list')._setCustomerReview = restaurant.customerReviews;\r\n\r\n        LikeInitiator.init({\r\n            likeButtonContainer: document.querySelector('.favorite'),\r\n            favoriteRestaurant: FavoriteRestaurantIdb,\r\n            restaurant,\r\n        });\r\n\r\n        const expandReview = document.querySelector('#expandReview');\r\n        expandReview.addEventListener('click', (e) => {\r\n            e.target.classList.toggle('d-none');\r\n            document.querySelector('review-list')._setCustomerReview = restaurant.customerReviews;\r\n        });\r\n\r\n        document.querySelector('review-form')._onSendReview = async (event) => {\r\n            event.preventDefault();\r\n            const result = await this.postReview(restaurant);\r\n            if (result) {\r\n                document.querySelector('review-list')._setCustomerReview = result.customerReviews;\r\n            }\r\n        };\r\n    }\r\n\r\n    // static showAlert(title, type) {\r\n    //     Swal.fire({\r\n    //         title,\r\n    //         text: 'Do you want to continue',\r\n    //         icon: `${type}`,\r\n    //         confirmButtonText: 'Cool',\r\n    //     });\r\n    // }\r\n\r\n    // static closeAlert() {\r\n    //     import('sweetalert2/dist/sweetalert2.min')\r\n    //         .then((module) => module.default)\r\n    //         .then((Swal) => Swal.close());\r\n    // }\r\n\r\n    static async postReview({ id }) {\r\n        const name = document.querySelector('#name');\r\n        const review = document.querySelector('#review');\r\n        try {\r\n            const result = await RestaurantSource.postRestaurant({\r\n                id,\r\n                name: name.value,\r\n                review: review.value,\r\n            });\r\n\r\n            // this.showAlert('Berhasil Posting Review', 'success');\r\n            name.value = '';\r\n            review.value = '';\r\n\r\n            return result;\r\n        } catch (error) {\r\n            // this.showAlert('Ooops gagal posting review', 'error');\r\n            console.error(error);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;\r\n"],"names":["i","App","button","drawer","content","this","_button","_drawer","_content","_initialAppShell","DrawerInitiator","url","UrlParser","page","Routes","render","innerHTML","afterRender","document","querySelector","addEventListener","event","preventDefault","focus","Detail","RestaurantSource","id","restaurantDetail","restaurant","_dataNameRestauarant","_aboutRestaurant","about","description","img","pictureId","_menuList","menus","_setInformationRestaurant","_setCustomerReview","customerReviews","LikeInitiator","likeButtonContainer","favoriteRestaurant","FavoriteRestaurantIdb","e","target","classList","toggle","_onSendReview","postReview","result","name","review","value","console","error"],"sourceRoot":""}